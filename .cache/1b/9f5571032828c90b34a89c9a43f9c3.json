{"id":"src/Sprite.js","dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sprite = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Sprite = /*#__PURE__*/function (_Phaser$GameObjects$S) {\n  _inherits(Sprite, _Phaser$GameObjects$S);\n\n  function Sprite() {\n    var _this;\n\n    var scene = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Phaser.Scene;\n    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : number;\n    var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : number;\n    var texture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : string;\n    var frame = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : number | string;\n\n    _classCallCheck(this, Sprite);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sprite).call(this, scene, x, y, texture, frame));\n    scene.sys.updateList.add(_assertThisInitialized(_this));\n    scene.sys.displayList.add(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  return Sprite;\n}(Phaser.GameObjects.Sprite);\n\nexports.Sprite = Sprite;"},"sourceMaps":{"js":{"mappings":[{"name":"Sprite","generated":{"line":22,"column":4},"source":"src/Sprite.js","original":{"line":1,"column":13}},{"generated":{"line":25,"column":0},"source":"src/Sprite.js","original":{"line":3,"column":4}},{"generated":{"line":25,"column":20},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"generated":{"line":26,"column":0},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"generated":{"line":28,"column":0},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"scene","generated":{"line":28,"column":8},"source":"src/Sprite.js","original":{"line":3,"column":16}},{"generated":{"line":28,"column":13},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"Phaser","generated":{"line":28,"column":84},"source":"src/Sprite.js","original":{"line":3,"column":24}},{"generated":{"line":28,"column":90},"source":"src/Sprite.js","original":{"line":3,"column":30}},{"name":"Scene","generated":{"line":28,"column":91},"source":"src/Sprite.js","original":{"line":3,"column":31}},{"generated":{"line":28,"column":96},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"generated":{"line":29,"column":0},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"x","generated":{"line":29,"column":8},"source":"src/Sprite.js","original":{"line":3,"column":38}},{"generated":{"line":29,"column":9},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"number","generated":{"line":29,"column":80},"source":"src/Sprite.js","original":{"line":3,"column":42}},{"generated":{"line":29,"column":86},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"generated":{"line":30,"column":0},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"y","generated":{"line":30,"column":8},"source":"src/Sprite.js","original":{"line":3,"column":50}},{"generated":{"line":30,"column":9},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"number","generated":{"line":30,"column":80},"source":"src/Sprite.js","original":{"line":3,"column":54}},{"generated":{"line":30,"column":86},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"generated":{"line":31,"column":0},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"texture","generated":{"line":31,"column":8},"source":"src/Sprite.js","original":{"line":3,"column":62}},{"generated":{"line":31,"column":15},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"string","generated":{"line":31,"column":86},"source":"src/Sprite.js","original":{"line":3,"column":72}},{"generated":{"line":31,"column":92},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"generated":{"line":32,"column":0},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"frame","generated":{"line":32,"column":8},"source":"src/Sprite.js","original":{"line":3,"column":80}},{"generated":{"line":32,"column":13},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"name":"number","generated":{"line":32,"column":84},"source":"src/Sprite.js","original":{"line":3,"column":88}},{"generated":{"line":32,"column":90},"source":"src/Sprite.js","original":{"line":3,"column":94}},{"name":"string","generated":{"line":32,"column":93},"source":"src/Sprite.js","original":{"line":3,"column":97}},{"generated":{"line":32,"column":99},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"generated":{"line":34,"column":0},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"generated":{"line":36,"column":0},"source":"src/Sprite.js","original":{"line":4,"column":8}},{"name":"scene","generated":{"line":36,"column":80},"source":"src/Sprite.js","original":{"line":4,"column":14}},{"generated":{"line":36,"column":85},"source":"src/Sprite.js","original":{"line":4,"column":8}},{"name":"x","generated":{"line":36,"column":87},"source":"src/Sprite.js","original":{"line":4,"column":21}},{"generated":{"line":36,"column":88},"source":"src/Sprite.js","original":{"line":4,"column":8}},{"name":"y","generated":{"line":36,"column":90},"source":"src/Sprite.js","original":{"line":4,"column":24}},{"generated":{"line":36,"column":91},"source":"src/Sprite.js","original":{"line":4,"column":8}},{"name":"texture","generated":{"line":36,"column":93},"source":"src/Sprite.js","original":{"line":4,"column":27}},{"generated":{"line":36,"column":100},"source":"src/Sprite.js","original":{"line":4,"column":8}},{"name":"frame","generated":{"line":36,"column":102},"source":"src/Sprite.js","original":{"line":4,"column":36}},{"generated":{"line":36,"column":107},"source":"src/Sprite.js","original":{"line":4,"column":8}},{"name":"scene","generated":{"line":37,"column":0},"source":"src/Sprite.js","original":{"line":5,"column":8}},{"name":"scene","generated":{"line":37,"column":4},"source":"src/Sprite.js","original":{"line":5,"column":8}},{"generated":{"line":37,"column":9},"source":"src/Sprite.js","original":{"line":5,"column":13}},{"name":"sys","generated":{"line":37,"column":10},"source":"src/Sprite.js","original":{"line":5,"column":14}},{"generated":{"line":37,"column":13},"source":"src/Sprite.js","original":{"line":5,"column":8}},{"name":"updateList","generated":{"line":37,"column":14},"source":"src/Sprite.js","original":{"line":5,"column":18}},{"generated":{"line":37,"column":24},"source":"src/Sprite.js","original":{"line":5,"column":8}},{"name":"add","generated":{"line":37,"column":25},"source":"src/Sprite.js","original":{"line":5,"column":29}},{"generated":{"line":37,"column":28},"source":"src/Sprite.js","original":{"line":5,"column":8}},{"name":"scene","generated":{"line":38,"column":0},"source":"src/Sprite.js","original":{"line":6,"column":8}},{"name":"scene","generated":{"line":38,"column":4},"source":"src/Sprite.js","original":{"line":6,"column":8}},{"generated":{"line":38,"column":9},"source":"src/Sprite.js","original":{"line":6,"column":13}},{"name":"sys","generated":{"line":38,"column":10},"source":"src/Sprite.js","original":{"line":6,"column":14}},{"generated":{"line":38,"column":13},"source":"src/Sprite.js","original":{"line":6,"column":8}},{"name":"displayList","generated":{"line":38,"column":14},"source":"src/Sprite.js","original":{"line":6,"column":18}},{"generated":{"line":38,"column":25},"source":"src/Sprite.js","original":{"line":6,"column":8}},{"name":"add","generated":{"line":38,"column":26},"source":"src/Sprite.js","original":{"line":6,"column":30}},{"generated":{"line":38,"column":29},"source":"src/Sprite.js","original":{"line":6,"column":8}},{"generated":{"line":39,"column":0},"source":"src/Sprite.js","original":{"line":3,"column":105}},{"generated":{"line":40,"column":0},"source":"src/Sprite.js","original":{"line":7,"column":5}},{"name":"Phaser","generated":{"line":43,"column":2},"source":"src/Sprite.js","original":{"line":1,"column":28}},{"generated":{"line":43,"column":8},"source":"src/Sprite.js","original":{"line":1,"column":34}},{"name":"GameObjects","generated":{"line":43,"column":9},"source":"src/Sprite.js","original":{"line":1,"column":35}},{"generated":{"line":43,"column":20},"source":"src/Sprite.js","original":{"line":1,"column":28}},{"name":"Sprite","generated":{"line":43,"column":21},"source":"src/Sprite.js","original":{"line":1,"column":47}}],"sources":{"src/Sprite.js":"export class Sprite extends Phaser.GameObjects.Sprite {\n\n    constructor(scene = Phaser.Scene, x = number, y = number, texture = string, frame = number | string) {\n        super(scene, x, y, texture, frame);\n        scene.sys.updateList.add(this);\n        scene.sys.displayList.add(this);\n    }\n}"},"lineCount":null}},"error":null,"hash":"7a51adcb3cecfd839d34882ba1949b20","cacheData":{"env":{}}}